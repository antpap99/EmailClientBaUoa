/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.emailclient;

import java.util.Properties;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Store;
import javax.mail.Transport;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.JOptionPane;
import java.io.File;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.io.File;
import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.mail.Multipart;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMultipart;
import javax.swing.JPanel;
import javax.swing.JLabel;


/**
 *
 * @author tzortzinakourte
 */
public class SendMail extends javax.swing.JFrame {
        
        private static final long MAX_FILE_SIZE = 30 * 1024 * 1024; // 30 MB in bytes
        private JFileChooser jFile;
        EmailClient emailclient = new EmailClient();
        private ArrayList<File> selectedFiles = new ArrayList<File>();
        private File [] SelectedFiles ; 
        
        
    private void EmailSender(String to, String subject, String message, File[] attachments) throws MessagingException {
        
    
        String username=emailclient.username;
        String password=emailclient.password;    
        String host=determineSMTPHost(username);
        //Properties props=getSMTPProperties(host);
        
        Properties props = new Properties();
        props.put("mail.smtp.host", host);
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.port", "587");
        
        
     
        Session session = Session.getInstance(props, new javax.mail.Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(emailclient.username, emailclient.password);
            }
        });
        
        try{
        
          //Δημιουργια του email message
          Message msg = new MimeMessage(session);
          msg.setFrom(new InternetAddress(username));
          msg.setRecipients(Message.RecipientType.TO, InternetAddress.parse(to));
          msg.setSubject(subject);
          //msg.setText(message);
        
        
          //τμημα με το κειμενο αρχειο
          MimeBodyPart messageBodyPart = new MimeBodyPart();
          messageBodyPart.setText(message);
          
          //Δημιουργια του multipart για το περιεχομενο του email
          Multipart multipart = new MimeMultipart();
          multipart.addBodyPart(messageBodyPart);
        
          //τμημα με το συννημενο αρχειο
          if (attachments !=null){
            for (File attachment:attachments){

              
            MimeBodyPart attachmentBodyPart=new MimeBodyPart();
            DataSource source=new FileDataSource(attachment);
            attachmentBodyPart.setDataHandler(new DataHandler(source));
            attachmentBodyPart.setFileName(attachment.getName());
            multipart.addBodyPart(attachmentBodyPart);
            }
         }

         // Προσθήκη του πολυμερούς μηνύματος στο κύριο μήνυμα email
         msg.setContent(multipart);
         // Αποστολή του μηνύματος
         Transport.send(msg);

         System.out.println("Email sent successfully");
        } catch (MessagingException e){
           throw new RuntimeException(e);
        }
      
    }
    
    private String determineSMTPHost(String email){
        if (email.endsWith("@gmail.com")){
            return "smtp.gmail.com";
        } else if (email.endsWith("@yahoo.com")){
            return "smtp.mail.yahoo.com";         
        }else if (email.endsWith("@outlook.com")){
            return "smtp.office365.com";
        } else {
           throw new IllegalArgumentException("Unsupported email provider.");
        }
    }
    /**
     * Creates new form SendMail
     */
    public SendMail() {
        initComponents();
        setDefaultCloseOperation(SendMail.DISPOSE_ON_CLOSE);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        lblTo = new javax.swing.JLabel();
        lblSubject = new javax.swing.JLabel();
        lblMessage = new javax.swing.JLabel();
        TextTo = new javax.swing.JTextField();
        TextSubject = new javax.swing.JTextField();
        TextMessage = new javax.swing.JTextField();
        btnSend = new javax.swing.JButton();
        btnAttach = new javax.swing.JButton();
        fileLabel = new javax.swing.JLabel();
        lblPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jInternalFrame1.setVisible(true);

        lblTo.setText("To:");

        lblSubject.setText("Subject:");

        lblMessage.setText("Message:");

        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        btnAttach.setText("Attach Files");
        btnAttach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAttachActionPerformed(evt);
            }
        });

        fileLabel.setText("No File Selected");
        fileLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fileLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout lblPanelLayout = new javax.swing.GroupLayout(lblPanel);
        lblPanel.setLayout(lblPanelLayout);
        lblPanelLayout.setHorizontalGroup(
            lblPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 224, Short.MAX_VALUE)
        );
        lblPanelLayout.setVerticalGroup(
            lblPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 338, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(lblSubject, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(lblTo, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnAttach, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                            .addComponent(lblPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fileLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(TextTo)
                    .addComponent(TextSubject)
                    .addComponent(TextMessage))
                .addContainerGap(173, Short.MAX_VALUE))
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTo)
                    .addComponent(TextTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSubject)
                    .addComponent(TextSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMessage)
                    .addComponent(TextMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSend)
                    .addComponent(btnAttach))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fileLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
            String to = TextTo.getText();
            String subject = TextSubject.getText();
            String message = TextMessage.getText();
            
            try{
                EmailSender(to,subject,message,SelectedFiles);
                JOptionPane.showMessageDialog(this, "Email sent successfully");
                this.dispose();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Failed to send email: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        
            }        
           
    }//GEN-LAST:event_btnSendActionPerformed

    private void btnAttachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAttachActionPerformed
        // TODO add your handling code here:
        jFile = new JFileChooser();
        jFile.setMultiSelectionEnabled(true);
        jFile.setDialogTitle("Choose Files and Directories");
        jFile.setFileSelectionMode(jFile.FILES_AND_DIRECTORIES);
        int result = jFile.showOpenDialog(null);
           long totalSize = 0;
           if (result == jFile.APPROVE_OPTION) {
                
                SelectedFiles = jFile.getSelectedFiles();
                for (File file : SelectedFiles) {
                    totalSize += file.length();
                    String filePath = file.getAbsolutePath();
                    String fileName = file.getName();
                    System.out.println("Selected file path: " + filePath);
                    System.out.println("Selected file name: " + fileName);
                       
                }
                //lblPanel.removeAll();
                lblPanel.setVisible(true);
           
                if (totalSize > (MAX_FILE_SIZE * SelectedFiles.length)) { // ελεγχος οτι τα αρχεια ειναι μικροτερα απο 30mb επι το πληθος τους
                    JOptionPane.showMessageDialog(null, 
                            "One File size exceeds 30 MB. Please select a smaller file.", 
                            "One of your selected Files is too Large to be sent", 
                            JOptionPane.ERROR_MESSAGE);
                }
                else{
                    for (File file : SelectedFiles){
                        selectedFiles.add(file);
                        if (SelectedFiles.length >= 1 ) {
                            JLabel FileLabel1 = new JLabel (file.getName());
                            lblPanel.add(FileLabel1);
                            System.out.println("file name :" + file.getName());
                        }
                    }
                    System.out.println("the files are:" + selectedFiles);
                    fileLabel.setText("Selected: " + selectedFiles.get(0).getName());
                } 
           }
           lblPanel.revalidate();
           lblPanel.repaint();
    }//GEN-LAST:event_btnAttachActionPerformed
    
    
    private void fileLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fileLabelMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_fileLabelMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SendMail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SendMail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SendMail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SendMail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SendMail().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TextMessage;
    private javax.swing.JTextField TextSubject;
    private javax.swing.JTextField TextTo;
    private javax.swing.JButton btnAttach;
    private javax.swing.JButton btnSend;
    private javax.swing.JLabel fileLabel;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JPanel lblPanel;
    private javax.swing.JLabel lblSubject;
    private javax.swing.JLabel lblTo;
    // End of variables declaration//GEN-END:variables
}
